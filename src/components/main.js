import React, { Component } from 'react'; import store from './store'; import '../index.css'; export default class Main extends Component { constructor(props) { super(props); this.output = { out: '0', }; this.refOutput = React.createRef(); } tapeValue(value) { let currentValue = value; let output = this.refOutput.current; this.setState({ out: currentValue }); if (output.value === '0') output.value = ''; output.value += currentValue; } tapeOperation(value) { let output = this.refOutput.current; if (value === '=') { try { output.value = eval(output.value); } catch (error) { output.value = 'Error!'; setTimeout(() => { output.value = '0' }, 1500); } } else output.value += value; } tapeOperationUp(value) { let output = this.refOutput.current; if (value === 'C') output.value.length === 1 ? output.value = '0' : output.value = output.value.substring(0, output.value.length - 1); else if (value === 'AC') output.value = '0'; else output.value += value; } render() { return (<div className='container'> <input type='text' defaultValue={this.output.out} ref={this.refOutput} /> <div className='operations-up'> {store.operationsTop.map((item, index) => (<button key={index} onClick={() => this.tapeOperationUp(item.val)}>{item.val}</button>))} </div> <div className='keywords'> {store.keywords.map((item, index) => (<button key={index} onClick={() => this.tapeValue(item.val)}>{item.val}</button>))} </div> <div className='operations-right'> {store.operations.map((item, index) => (<button key={index} onClick={() => this.tapeOperation(item.val)}>{item.val}</button>))} </div> <div className='operations-down'> <button className='zero' onClick={() => this.tapeOperationUp('0')}>0</button> <button className='point' onClick={() => this.tapeOperationUp('.')}>,</button> </div> </div>) } } 